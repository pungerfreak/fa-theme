<!-- /templates/collection.liquid -->
{% comment %}

  For more information on collection tags:
    - http://docs.shopify.com/themes/liquid-variables/collection

{% endcomment %}

{% paginate collection.products by section.settings.no_posts %}

{% assign all_filters = false %}
{% assign any_filters = false %}

{% if section.settings.enable_tag_filter or section.settings.enable_sort_filter %}
{% assign any_filters = true %}
{% endif %}


{% if section.settings.enable_tag_filter and section.settings.enable_sort_filter %}
{% assign all_filters = true %}
{% endif %}

{% assign only_tags = false %}
{% if section.settings.enable_tag_filter and section.settings.enable_sort_filter == false %}
{% assign only_tags = true %}
{% endif %}

{% assign description_classes = ' mt2 mb4' %}
{% if any_filters %}
{% assign description_classes = ' mt2 mb3' %}
{% endif %}

{% assign header_class = '' %}
{% if any_filters == false and collection.description == blank %}
{% assign header_class = 'mb3' %}
{% endif %}


<section class="section bg--section py4">
  <div class="wrapper section--wrapper">

  {% comment %}
    Use .grid--rev so that the collection tags appear below the products on mobile
  {% endcomment %}
  <div class="grid--rev">
    <div class="grid__item">


      <header class="text-align--center">
        <h1 class="f--main t--section-title font-size--xl {{ header_class }}">{{ collection.title }}</h1>
        {% if collection.description != blank %}
        <div class="f--title   font-size--xl {{ description_classes }}">
          {{ collection.description }}
        </div>
        {% endif %}
      </header>

      {% if section.settings.enable_tag_filter or section.settings.enable_sort_filter %}
      <div class="filters text-align--center pt3 pb4 {% if only_tags %}lg--hide{% endif %}">
        {% if section.settings.enable_tag_filter %}
        <div class="filters__tags f--main t--meta inline-block relative mx2">
          <select class="filters__tag--select coll-filter  f--main" data-url="{% if collection.handle %}/collections/{{ collection.handle }}{% elsif collection.products.first.type == collection.title %}{{ collection.title | url_for_type }}{% elsif collection.products.first.vendor == collection.title %}{{ collection.title | url_for_vendor }}{% endif %}" data-handle="{{ collection.handle }}">
            <option value="">{{ 'collections.sorting.all_tags' | t }}</option>
            {% for tag in collection.all_tags %}
            {% if current_tags contains tag %}
            <option value="{{ tag | handle }}" selected>{{ tag }}</option>
            {% else %}
            <option value="{{ tag | handle }}">{{ tag }}</option>
            {% endif %}
            {% endfor %}
          </select>
        </div>
        {% endif %}
        {% if section.settings.enable_sort_filter %}
        <div class="filters__sort f--main t--meta inline-block relative mx2">
          <select class="filters__sort--select f--main" name="SortBy" id="SortBy" data-default="{{ collection.sort_by | default: collection.default_sort_by }}">
            <option value="manual">{{ 'collections.sorting.featured' | t }}</option>
            <option value="best-selling">{{ 'collections.sorting.best_selling' | t }}</option>
            <option value="title-ascending">{{ 'collections.sorting.az' | t }}</option>
            <option value="title-descending">{{ 'collections.sorting.za' | t }}</option>
            <option value="price-ascending">{{ 'collections.sorting.price_ascending' | t }}</option>
            <option value="price-descending">{{ 'collections.sorting.price_descending' | t }}</option>
            <option value="created-descending">{{ 'collections.sorting.date_descending' | t }}</option>
            <option value="created-ascending">{{ 'collections.sorting.date_ascending' | t }}</option>
          </select>
        </div>
        {% endif %}
      </div>
      {% endif %}

      {% if only_tags %}
      <div class="tags tags--collection text-align--center pt3 pb4  md-dn--hide">
        <ul class="list-reset m0 mx--auto f--main t--meta font-size--s">
          <li class="inline-block mx1 my1">
            <a class="tag__item {% if current_tags == blank %}tag__item--active color--primary {% else %} color--shop-accent{% endif %}" href="{{collection.url  }}">All</a>
          </li>
          {% for tag in collection.all_tags %}
            {% if current_tags contains tag %}
              <li class="inline-block mx1 my1">
                <a class="tag__item tag__item--active color--primary" href="{{ tag | handle }}">{{ tag }}</a>
              </li>
            {% else %}
              <li class="inline-block mx1 my1">
                <a class="tag__item color--shop-accent" href="{% if collection.handle %}/collections/{{ collection.handle }}{% elsif collection.products.first.type == collection.title %}{{ collection.title | url_for_type }}{% elsif collection.products.first.vendor == collection.title %}{{ collection.title | url_for_vendor }}{% endif %}/{{ tag | handle }}">{{ tag }}</a>
              </li>
            {% endif %}
          {% endfor %}
        </ul>
      </div>
      {% endif %}


      {% comment %}
        Use class grid-uniform to have evenly sized columns clear
        each other properly at each breakpoint.
      {% endcomment %}
      <div class="grid-uniform product-grid">
        <div class="product-grid__inner clearfix">
          {% comment %}
            Loop through our products in the current collection.
            See the snippet 'product-grid-item' for the layout.
          {% endcomment %}
          {% for product in collection.products %}

            {% assign grid_item_width = 'md-dn--one-half lg--one-quarter dt--one-quarter mt4' %}
            {% include 'product-grid-item' %}

          {% else %}

            {% if collection.handle == 'all' and current_tags == '' %}

              {% comment %}
                Add default products to help with onboarding for collections/all only
              {% endcomment %}
              {% unless emptyState %}
                {{ 'theme-onboarding.css' | global_asset_url | stylesheet_tag }}
                {% assign emptyState = true %}
              {% endunless %}
              {% include 'onboarding-empty-collection' %}

            {% else %}

              {% comment %}
                If collection exists but is empty, display message
              {% endcomment %}
              <div class="grid__item text-align--center mt4">
                <p class="f--main">{{ 'collections.general.no_matches' | t }}</p>
              </div>

            {% endif %}

          {% endfor %}

        </div>

      </div>



      {% if paginate.pages > 1 %}

        {% assign paginateURL = '' %}
        {% if paginate.previous.is_link %}
          {% assign paginateURL = paginate.previous.url %}
        {% endif %}
        {% if paginate.next.is_link %}
          {% assign paginateURL = paginate.next.url %}
        {% endif %}

        <div class="text-align--center">
          <ul class="pagination list-rest no-bullets mt4 max-width--4 mx--auto text-align--center f--main font-size--s inline-block relative">
            {% if paginate.previous.is_link %}
                <li class="pagination__link pagination__link--previous">
                  <a class="pagination__item color--shop-accent" href="{{ paginate.previous.url }}">{{ paginate.previous.title | replace: '&laquo;', ''}}</a>
                </li>
            {% endif %}
            {% assign currPage = paginate.current_page %}
            {% if currPage > 2 %}
              {% assign startNumber = currPage | minus: 2 %}
            {% else %}
              {% assign startNumber = 1 %}
            {% endif %}
            {% assign endNumber = currPage | plus: 2 %}
            {% if startNumber <= 2 %}
            	{% assign startNumber = 1 %}
            	{% assign endNumber = 5 %}
            {% endif %}
            {% if endNumber >= paginate.pages %}
              {% if paginate.pages > 4 %}
            	 {% assign startNumber = paginate.pages | minus: 4 %}
              {% endif %}
            	{% assign endNumber = paginate.pages %}
            {% endif %}
            {% for part in (startNumber..endNumber) %}
                {% assign oldPage = paginateURL | split: '?' %}
                {% assign oldPage = oldPage[1] | split: '&' %}
                {% capture newPage %}page={{ part}}{% endcapture %}
                {% assign newPaginateURL = paginateURL | replace: oldPage[0], newPage %}
                <li class="inline-block mx1 md-dn--hide">
                  <a class="pagination__item color--shop-accent {% if paginate.current_page == part %}active{% endif %}" href="{{ newPaginateURL }}">{{ part }}</a>
                </li>
            {% endfor %}
            {% if paginate.next.is_link %}
                <li class="pagination__link pagination__link--next">
                  <a class="pagination__item color--shop-accent" href="{{ paginate.next.url }}">{{ paginate.next.title | replace: '&raquo;', '' }}</a>
                </li>
            {% endif %}
          </ul>
        </div>
      {% endif %}

    </div>

  </div>

  {% endpaginate %}

  </div> <!-- end section wrapper -->
</section>



{% schema %}
  {
    "name": "Collection pages",
    "class": "collection-template",
    "settings": [
      {
         "type":      "range",
         "id":        "no_posts",
         "min":       4,
         "max":        24,
         "step":       4,
         "label":     "No of products per page",
         "default":   12
      },
      {
        "type": "checkbox",
        "id": "enable_tag_filter",
        "label": "Enable filtering by product tag"
      },
      {
        "type": "checkbox",
        "id": "enable_sort_filter",
        "label": "Enable collection sorting"
      }
    ]
  }
{% endschema %}
